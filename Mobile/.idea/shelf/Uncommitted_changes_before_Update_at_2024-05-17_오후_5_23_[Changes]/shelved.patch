Index: app/src/main/java/com/example/ecoariumapp/fragments/StoreFragment.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import android.content.Context\r\nimport android.os.Bundle\r\nimport android.view.LayoutInflater\r\nimport android.view.View\r\nimport android.view.ViewGroup\r\nimport androidx.fragment.app.Fragment\r\nimport com.example.ecoariumapp.R\r\n\r\nclass StoreFragment: Fragment() {\r\n\r\n    companion object {\r\n        fun newInstance():StoreFragment {\r\n            return StoreFragment()\r\n        }\r\n    }\r\n\r\n    // 메모리에 올라갔을 때\r\n    override fun onCreate(savedInstanceState: Bundle?) {\r\n        super.onCreate(savedInstanceState)\r\n    }\r\n\r\n    // 프래그먼트를 안고 있는 액티비티에 붙었을 때\r\n    override fun onAttach(context: Context) {\r\n        super.onAttach(context)\r\n    }\r\n\r\n    // 뷰가 생성되었을 때, 프래그먼트와 레이아웃을 연결시켜주는 부분\r\n    override fun onCreateView(\r\n        inflater: LayoutInflater,\r\n        container: ViewGroup?,\r\n        savedInstanceState: Bundle?\r\n    ): View? {\r\n        // 레이아웃과 조각을 서로 연결\r\n        val view = inflater.inflate(R.layout.fragment_store, container, false)\r\n        return view\r\n    }\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/ecoariumapp/fragments/StoreFragment.kt b/app/src/main/java/com/example/ecoariumapp/fragments/StoreFragment.kt
--- a/app/src/main/java/com/example/ecoariumapp/fragments/StoreFragment.kt	(revision a56e0048ec448cc73ef022f0dd16566a72f60b3c)
+++ b/app/src/main/java/com/example/ecoariumapp/fragments/StoreFragment.kt	(date 1715933721796)
@@ -5,6 +5,7 @@
 import android.view.ViewGroup
 import androidx.fragment.app.Fragment
 import com.example.ecoariumapp.R
+import com.example.ecoariumapp.sendRequests.sendLoadItemsRequest
 
 class StoreFragment: Fragment() {
 
@@ -32,6 +33,7 @@
     ): View? {
         // 레이아웃과 조각을 서로 연결
         val view = inflater.inflate(R.layout.fragment_store, container, false)
+        sendLoadItemsRequest(this)
         return view
     }
 
Index: app/src/main/java/com/example/ecoariumapp/sendRequests/sendStoreRequest.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/ecoariumapp/sendRequests/sendStoreRequest.kt b/app/src/main/java/com/example/ecoariumapp/sendRequests/sendStoreRequest.kt
new file mode 100644
--- /dev/null	(date 1715933745010)
+++ b/app/src/main/java/com/example/ecoariumapp/sendRequests/sendStoreRequest.kt	(date 1715933745010)
@@ -0,0 +1,77 @@
+package com.example.ecoariumapp.sendRequests
+
+import android.util.Log
+import androidx.fragment.app.Fragment
+import androidx.recyclerview.widget.LinearLayoutManager
+import androidx.recyclerview.widget.RecyclerView
+import com.example.ecoariumapp.IpConfig
+import com.example.ecoariumapp.R
+import com.example.ecoariumapp.adapters.InventoryRecyclerViewAdapter
+import okhttp3.*
+import org.json.JSONObject
+import java.io.IOException
+
+// 서버에서 아이템 리스트 가져오기
+fun sendLoadItemsRequest(fragment: Fragment) {
+    val request = Request.Builder()
+        .url("http://${IpConfig.serverIp}:8000/store/load")
+        .get()
+        .build()
+    client.newCall(request).enqueue(object : Callback {
+        override fun onFailure(call: Call, e: IOException) {
+            // 네트워크 오류 처리
+            e.printStackTrace()
+        }
+        override fun onResponse(call: Call, response: Response) {
+            // 프로필 요청 성공 처리
+            if (response.isSuccessful) {
+                val responseBody: ResponseBody? = response.body
+                val jsonData: String = responseBody?.string() ?: ""
+
+                Log.d("sendLoadItemsRequest", "jsonData: $jsonData")
+
+
+                val jsonObject = JSONObject(jsonData)
+                val itemObject = jsonObject.getJSONArray("item")
+
+                val availableArray = jsonObject.getJSONArray("available_items")
+                val itemArray = jsonObject.getJSONArray("item")
+
+                val availableList = mutableListOf<Pair<String, String>>()
+                val itemList = mutableListOf<Triple<String, String, String>>()
+
+                for (i in 0 until availableArray.length()) {
+                    val availableObject = availableArray.getJSONObject(i)
+                    val itemId = availableObject.getString("itemId")
+                    val createdAt = availableObject.getString("createdAt")
+                    availableList.add(Pair(itemId, createdAt))
+                }
+
+                for (i in 0 until itemArray.length()) {
+                    val itemObject = itemArray.getJSONObject(i)
+                    val id = itemObject.getString("id")
+                    val name = itemObject.getString("name")
+                    var img = itemObject.getString("img")
+                    img = img.substringAfter("/img/")
+                    itemList.add(Triple(id, name, img))
+                }
+
+                val combinedList = mutableListOf<List<String>>()
+                for (i in 0 until availableArray.length()) {
+                    for (j in 0 until itemArray.length()) {
+                        if(availableList[i].first == itemList[j].first){
+                            combinedList.add(listOf(availableList[i].first, availableList[i].second, itemList[j].second, itemList[j].third))
+                        }
+                    }
+                }
+                Log.d("combinedList", "combinedList: $combinedList")
+
+                fragment.activity?.runOnUiThread {
+                    val recyclerView = fragment.view?.findViewById<RecyclerView>(R.id.recyclerView)
+                    recyclerView?.layoutManager = LinearLayoutManager(fragment.context)
+                    recyclerView?.adapter = InventoryRecyclerViewAdapter(combinedList)
+                }
+            }
+        }
+    })
+}
\ No newline at end of file
Index: app/src/main/java/com/example/ecoariumapp/adapters/StoreRecyclerViewAdapter.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/ecoariumapp/adapters/StoreRecyclerViewAdapter.kt b/app/src/main/java/com/example/ecoariumapp/adapters/StoreRecyclerViewAdapter.kt
new file mode 100644
--- /dev/null	(date 1715933360190)
+++ b/app/src/main/java/com/example/ecoariumapp/adapters/StoreRecyclerViewAdapter.kt	(date 1715933360190)
@@ -0,0 +1,4 @@
+package com.example.ecoariumapp.adapters
+
+class StoreRecyclerViewAdapter {
+}
\ No newline at end of file
